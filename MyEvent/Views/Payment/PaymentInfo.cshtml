@model MyEvent.Models.DB.Event
<style>
    .payment-container {
        width: 800px;
        margin: 20px auto;
        background-color: #222;
        color: white;
        padding: 20px;
        border-radius: 8px;
        max-height: 90vh;
        overflow-y: auto;
    }

    .payment-heading {
        text-align: center;
        font-size: 28px;
        margin-bottom: 20px;
    }

    .payment-form {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

        .payment-form label {
            font-size: 16px;
        }

        .payment-form input {
            padding: 10px;
            border: none;
            border-radius: 4px;
        }

    .pay-button {
        background-color: green;
        color: white;
        padding: 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 18px;
    }

    .payment-message {
        position: fixed;
        top: -60px; /* Start hidden above the viewport */
        left: 50%;
        transform: translateX(-50%);
        background-color: #28a745;
        color: white;
        padding: 15px 25px;
        border-radius: 6px;
        font-size: 18px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.3);
        opacity: 0;
        transition: all 0.6s ease; /* Smooth slide + fade */
        z-index: 9999;
    }

        .payment-message.show {
            top: 20px; /* Slide into view */
            opacity: 1;
        }
</style>

<div class="payment-container">
    <h2 class="payment-heading">Payment Information</h2>

    <form asp-controller="Payment" asp-action="ProcessPayment" method="post" class="payment-form" id="paymentForm">
        <input type="hidden" name="eventId" value="@Model.Id" />

        <label for="holderName">Cardholder Name</label>
        <input type="text" id="holderName" name="HolderName" placeholder="John Doe" required />

        <label for="holderEmail">Email</label>
        <input type="email" id="holderEmail" name="HolderEmail" placeholder="example@mail.com" required />

        <label for="cardNumber">Card Number</label>
        <input type="text" id="cardNumber" name="CardNumber" placeholder="XXXX-XXXX-XXXX-XXXX" required />

        <label for="expiry">Expiry Date</label>
        <input type="text" id="expiry" name="Expiry" placeholder="MM/YY" required />

        <label for="cvv">CVV</label>
        <input type="text" id="cvv" name="CVV" placeholder="123" required />

        <button type="submit" class="pay-button">Pay Now</button>
    </form>

    @if (TempData["Success"] != null)
    {
        <div id="payment-success" class="payment-message" style="background-color: #28a745;">
            ✅ @TempData["Success"]
        </div>
    }
    
    @if (ViewBag.ErrorMessage != null)
    {
        <div id="payment-error" class="payment-message" style="background-color: #dc3545;">
            ❌ @ViewBag.ErrorMessage
        </div>
    }

</div>

<script>
    window.onload = function () {
        const successMsg = document.getElementById("payment-success");
        const errorMsg = document.getElementById("payment-error");

        [successMsg, errorMsg].forEach(msg => {
            if (msg && msg.textContent.trim() !== "") {
                msg.classList.add("show");
                setTimeout(() => {
                    msg.classList.remove("show");
                }, 3000);
            }
        });
    };
</script>

