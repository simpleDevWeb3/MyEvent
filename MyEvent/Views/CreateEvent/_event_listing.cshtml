
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<MyEvent.Models.DB.Event>
@{
    int i = 0;

    string[] fields = ["Id", "Name", "Category", "Date","Price"];
}

<style>
    .pagination {
      display: inline-block;
      padding-left: 0;
      margin: 0 50px;
      border-radius: 4px;
    }

    .pagination > li {
      display: inline;
    }

    .pagination > li > a,
    .pagination > li > span {
        color: black;
      position: relative;
      float: left;
      padding: 6px 12px;
      margin-left: -1px;
      line-height: 1.428571429;
      text-decoration: none;
      background-color: grey;
      border: 1px solid #dddddd;
    }

    .pagination > li:first-child > a,
    .pagination > li:first-child > span {
      margin-left: 0;
      border-bottom-left-radius: 4px;
      border-top-left-radius: 4px;
    }

    .pagination > li:last-child > a,
    .pagination > li:last-child > span {
      border-top-right-radius: 4px;
      border-bottom-right-radius: 4px;
    }

    .pagination > li > a:hover,
    .pagination > li > span:hover,
    .pagination > li > a:focus,
    .pagination > li > span:focus {
      background-color: #545353;
    }

    .pagination > .active > a,
    .pagination > .active > span,
    .pagination > .active > a:hover,
    .pagination > .active > span:hover,
    .pagination > .active > a:focus,
    .pagination > .active > span:focus {
      z-index: 2;
      color: white;
      cursor: default;
      background-color: black;
      border-color: #707070;
    }

    .pagination > .disabled > span,
    .pagination > .disabled > a,
    .pagination > .disabled > a:hover,
    .pagination > .disabled > a:focus {
      color: #909090;
      cursor: not-allowed;
      background-color: #505050;
      border-color: #707070;
    }

    .pagination-lg > li > a,
    .pagination-lg > li > span {
      padding: 10px 16px;
      font-size: 18px;
    }

    .pagination-lg > li:first-child > a,
    .pagination-lg > li:first-child > span {
      border-bottom-left-radius: 6px;
      border-top-left-radius: 6px;
    }

    .pagination-lg > li:last-child > a,
    .pagination-lg > li:last-child > span {
      border-top-right-radius: 6px;
      border-bottom-right-radius: 6px;
    }

    .pagination-sm > li > a,
    .pagination-sm > li > span {
      padding: 5px 10px;
      font-size: 12px;
    }

    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span {
      border-bottom-left-radius: 3px;
      border-top-left-radius: 3px;
    }

    .pagination-sm > li:last-child > a,
    .pagination-sm > li:last-child > span {
      border-top-right-radius: 3px;
      border-bottom-right-radius: 3px;
    }

    .pager {
      padding-left: 0;
      margin: 20px 0;
      text-align: center;
      list-style: none;
    }

    .pager:before,
    .pager:after {
      display: table;
      content: " ";
    }

    .pager:after {
      clear: both;
    }

    .pager:before,
    .pager:after {
      display: table;
      content: " ";
    }

    .pager:after {
      clear: both;
    }

    .pager li {
      display: inline;
    }

    .pager li > a,
    .pager li > span {
      color: black;
      display: inline-block;
      padding: 5px 14px;
      background-color: #ffffff;
      border: 1px solid #dddddd;
      border-radius: 15px;
    }

    .pager li > a:hover,
    .pager li > a:focus {
      text-decoration: none;
      background-color: #eeeeee;
    }

    .pager .next > a,
    .pager .next > span {
      float: right;
    }

    .pager .previous > a,
    .pager .previous > span {
      float: left;
    }

    .pager .disabled > a,
    .pager .disabled > a:hover,
    .pager .disabled > a:focus,
    .pager .disabled > span {
      color: #999999;
      cursor: not-allowed;
      background-color: #ffffff;
    }
</style>

    @Html.Hidden("sort", "", new { form = "f" })
    @Html.Hidden("dir" , "", new { form = "f" })

    <table class="table">
        <tr>
    <tr>
        <th>No.</th>
        @foreach (var f in fields)
        {
            string d = "asc";
            string c = "";

            if (f == ViewBag.Sort)
            {
                d = ViewBag.Dir == "des" ? "asc" : "des";
                c = ViewBag.Dir;
            }

            <th>
                <a data-ajax="true"
                   data-ajax-update="#target"
                   data-ajax-loading="#loader"
                   href="?name=@ViewBag.Name&sort=@f&dir=@d" class="@c">@f</a>
            </th>
        }

        </tr>
        @foreach (var e in Model)
        {
            <tr>
                <td>@(++i)</td>
                <td>@e.Id</td>
                <td>@e.Title</td>
                <td>@e.Category.Name</td>
                <td>@e.Detail.Date</td>
                <td>@(e.Price == 0.00m ? "Free" : e.Price)</td>

                <td>
                    <button data-get="/event_detail/@e.Id">Detail</button>
                    <button class="btn-Delete" data-post="/CreateEvent/Delete/@e.Id">Delete</button>
                </td>
            </tr>
        }
    </table>

@{
    var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
    options.LinkToFirstPageFormat    = "First";
    options.LinkToLastPageFormat     = "Last";
    options.LinkToPreviousPageFormat = "<";
    options.LinkToNextPageFormat     = ">";

    var ajaxOptions = new AjaxOptions
    {
        HttpMethod = "get",
        UpdateTargetId = "target",
        LoadingElementId = "#loader",
    };
}

@Html.PagedListPager(
    Model,
    p => $"?name={ViewBag.Name}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={p}",
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(options, ajaxOptions)
)
