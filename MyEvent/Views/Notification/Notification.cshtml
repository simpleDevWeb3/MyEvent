@model List<MyEvent.Models.DB.Ticket>
@using System

<style>
    .ticket-container {
        width: 800px;
        margin: 20px auto;
        background-color: #222;
        color: white;
        padding: 20px;
        border-radius: 8px;
    }

    .ticket-heading {
        text-align: center;
        font-size: 28px;
        margin-bottom: 20px;
    }

    .ticket-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

        .ticket-table th, .ticket-table td {
            border: 1px solid white;
            padding: 10px;
            text-align: left;
        }

        .ticket-table th {
            background-color: #444;
        }

        .ticket-table tr:nth-child(even) {
            background-color: #333;
        }

        .ticket-table tr:nth-child(odd) {
            background-color: #222;
        }

        .ticket-table tr:hover {
            background-color: #555;
        }

    .status-upcoming {
        color: #28a745;
        font-weight: bold;
    }

    .status-ongoing {
        color: darkorange;
        font-weight: bold;
    }

    .status-past {
        color: #dc3545;
        font-weight: bold;
    }

    .remove-btn {
        background: #dc3545;
        border: none;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
    }

        .remove-btn:hover {
            background: #b52b3a;
        }

    .delete-message {
        position: fixed;
        top: 100px;
        right: -400px; /* start hidden off-screen */
        background-color: #dc3545; /* red for delete */
        color: white;
        padding: 12px 20px;
        border-radius: 6px;
        font-weight: bold;
        z-index: 1000;
        transition: right 0.5s ease;
    }

        .delete-message.show {
            right: 20px; /* slide into view */
        }

</style>

<div class="ticket-container">
    <h2 class="ticket-heading">My Event Notifications</h2>

    <div id="flash-delete" class="delete-message"></div>

    @if (Model?.Any() == true)
    {
        <table class="ticket-table" id="notification-table">
            <thead>
                <tr>
                    <th>Event</th>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in Model)
                {
                    var now = DateTime.Now;

                    var eventDate = ticket.Event?.Detail?.Date ?? DateOnly.MinValue;
                    var startTime = ticket.Event?.Detail?.StartTime ?? TimeOnly.MinValue;
                    var endTime = ticket.Event?.Detail?.EndTime ?? TimeOnly.MinValue;

                    var eventStart = eventDate.ToDateTime(startTime);
                    var eventEnd = eventDate.ToDateTime(endTime);

                    string status;
                    string statusClass;

                    if (now < eventStart)
                    {
                        status = "Upcoming";
                        statusClass = "status-upcoming";
                    }
                    else if (now >= eventStart && now <= eventEnd)
                    {
                        status = "Ongoing";
                        statusClass = "status-ongoing";
                    }
                    else
                    {
                        status = "Past";
                        statusClass = "status-past";
                    }

                    <tr id="notif-@ticket.TicketId">
                        <td>@ticket.Event?.Title</td>
                        <td>@eventDate.ToString("yyyy-MM-dd")</td>
                        <td>@startTime.ToString("HH\\:mm") - @endTime.ToString("HH\\:mm")</td>
                        <td><span class="@statusClass">@status</span></td>
                        <td>
                            <form asp-action="Dismiss" asp-controller="Notification" method="post" class="dismiss-form">
                                <input type="hidden" name="ticketId" value="@ticket.TicketId" />
                                <button type="submit" class="remove-btn">Remove</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p style="text-align:center;">No notifications. You don’t have any tickets.</p>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".dismiss-form").forEach(form => {
            form.addEventListener("submit", function (e) {
                e.preventDefault();
                const row = form.closest("tr");

                fetch(form.action, {
                    method: "POST",
                    body: new FormData(form)
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        if (row) {
                            row.remove();

                            // check if table is empty
                            const tableBody = document.querySelector("#notification-table tbody");
                            if (tableBody && tableBody.rows.length === 0) {
                                // remove the whole table
                                const table = document.getElementById("notification-table");
                                if (table) {
                                    table.remove();
                                }

                                // show the "no notifications" message
                                const container = document.querySelector(".ticket-container");
                                const msg = document.createElement("p");
                                msg.style.textAlign = "center";
                                msg.textContent = "No notifications. You don’t have any tickets.";
                                container.appendChild(msg);
                            }
                        }

                        // flash message
                        const flash = document.getElementById("flash-delete");
                        if (flash) {
                            flash.textContent = data.message;

                            flash.classList.remove("show");
                            void flash.offsetWidth; // restart animation
                            flash.classList.add("show");

                            setTimeout(() => flash.classList.remove("show"), 3000);
                        }

                        // refresh the badge dynamically
                        fetch('/Notification/RefreshBadge')
                            .then(res => res.text())
                            .then(html => {
                                const oldButton = document.querySelector('[data-ajax-page="/Notification/Notification"]');
                                if (oldButton) {
                                    oldButton.outerHTML = html.trim();
                                }
                            });
                    }
                });
            });
        });
    });
</script>


